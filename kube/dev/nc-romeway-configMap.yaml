apiVersion: v1
kind: ConfigMap
metadata:
  name: nc-romeway
  labels:
    name: romeway
data:
  CONTROL_PORT: "18000"
  CONFIG_PATH: "./configuration/"
  LOGGING_FILE_PATH: /nexcloud/log/
  DEFAULT_CONFIG: "default" 
  XDS_URL: "romeway"
  XDS_PORT: "19000"
  CONFIG_SERVER_URI: https://console.nexclipper.io:8080/config-server/
  SPRING_CLOUD_CONFIG_URI: "http://config-server:8080"



---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nc-romeway-files
  labels:
    app: romeway
data:
  default.yml: |
    static_resources:
      clusters:
      - name: history-service
        connect_timeout: 1s
        lb_policy: ROUND_ROBIN
        type: EDS
        eds_cluster_config:
          eds_config:
            resource_api_version: V3
            api_config_source:
              api_type: GRPC
              transport_api_version: V3
              grpc_services:
                - envoy_grpc:
                    cluster_name: xds_cluster

      - name: user-service
        connect_timeout: 1s
        lb_policy: ROUND_ROBIN
        type: EDS
        eds_cluster_config:
          eds_config:
            resource_api_version: V3
            api_config_source:
              api_type: GRPC
              transport_api_version: V3
              grpc_services:
                - envoy_grpc:
                    cluster_name: xds_cluster

      - name: noti-service
        connect_timeout: 1s
        lb_policy: ROUND_ROBIN
        type: EDS
        eds_cluster_config:
          eds_config:
            resource_api_version: V3
            api_config_source:
              api_type: GRPC
              transport_api_version: V3
              grpc_services:
                - envoy_grpc:
                    cluster_name: xds_cluster

      - name: lari-service
        connect_timeout: 1s
        lb_policy: ROUND_ROBIN
        type: EDS
        eds_cluster_config:
          eds_config:
            resource_api_version: V3
            api_config_source:
              api_type: GRPC
              transport_api_version: V3
              grpc_services:
                - envoy_grpc:
                    cluster_name: xds_cluster

      - name: klevr
        connect_timeout: 1s
        lb_policy: ROUND_ROBIN
        type: EDS
        eds_cluster_config:
          eds_config:
            resource_api_version: V3
            api_config_source:
              api_type: GRPC
              transport_api_version: V3
              grpc_services:
                - envoy_grpc:
                    cluster_name: xds_cluster

      - name: config-server
        connect_timeout: 1s
        lb_policy: ROUND_ROBIN
        type: EDS
        eds_cluster_config:
          eds_config:
            resource_api_version: V3
            api_config_source:
              api_type: GRPC
              transport_api_version: V3
              grpc_services:
                - envoy_grpc:
                    cluster_name: xds_cluster

  front-gateway.yml: |
    static_resources:
      listeners:
      - name: inbound_http
        address:
          socket_address:
            address: 0.0.0.0
            port_value: 10000
        traffic_direction: INBOUND
        filter_chains:
        - filters:
          - name: envoy.filters.network.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
    # jaeger trace 설정 시작
              generate_request_id: true
              # tracing:
              #   provider:
              #     name: envoy.tracers.zipkin
              #     typed_config:
              #       "@type": type.googleapis.com/envoy.config.trace.v3.ZipkinConfig
              #       collector_cluster: jaeger
              #       collector_endpoint: "/api/v2/spans"
              #       shared_span_context: false
              #       collector_endpoint_version: HTTP_PROTO
              codec_type: auto
              stat_prefix: ingress_http
              http_filters:
              - name: envoy.filters.http.router
              route_config:
                name: ingress_route
                validate_clusters: false
                virtual_hosts:
                - name: backend
                  domains:
                    - "*"
                  routes:
                  - match: { prefix: "/klevr/" }
                    route: { cluster: klevr, prefix_rewrite: "/" }
                    decorator: { operation: klevrService }
                  - match: { prefix: "/config-server/" }
                    route: { cluster: config-server }
                    decorator: { operation: config-server }
                  - match: { prefix: "/login/" }
                    route: { cluster: user-service }
                    decorator: { operation: user-service }
                  - match: { prefix: "/users/" }
                    route: { cluster: user-service, prefix_rewrite: "/" }
                    decorator: { operation: user-service }
                  - match: { prefix: "/notis/" }
                    route: { cluster: noti-service, prefix_rewrite: "/" }
                    decorator: { operation: noti-service }
                  - match: { prefix: "/lari/" }
                    route: { cluster: lari-service, prefix_rewrite: "/" }
                    decorator: { operation: lari-service }
                  - match: { prefix: "/history/" }
                    route: { cluster: history-service, prefix_rewrite: "/" }
                    decorator: { operation: history-service }

  sidecar.yml: |
    static_resources:
      listeners:
      - name: inbound_http
        address:
          socket_address:
            address: 0.0.0.0
            port_value: 10000
        traffic_direction: INBOUND
        filter_chains:
        - filters:
          - name: envoy.filters.network.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
    # jaeger tracing 시작
              generate_request_id: true
              # tracing:
              #   provider:
              #     name: envoy.tracers.zipkin
              #     typed_config:
              #       "@type": type.googleapis.com/envoy.config.trace.v3.ZipkinConfig
              #       collector_cluster: jaeger
              #       collector_endpoint: "/api/v2/spans"
              #       shared_span_context: false
              #       collector_endpoint_version: HTTP_PROTO
              stat_prefix: ingress_http
              route_config:
                name: local_route
                validate_clusters: true
                virtual_hosts:
                - name: local_route
                  domains:
                  - "*"
                  routes:
                  - match:
                      prefix: "/"
                    route:
                      cluster: local_service
                    decorator:
                      operation: local_service
              http_filters:
              - name: envoy.filters.http.router
                typed_config: {}
      - name: outbound_http
        address:
          socket_address:
            address: 0.0.0.0
            port_value: 9000
        traffic_direction: OUTBOUND
        filter_chains:
        - filters:
          - name: envoy.filters.network.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
    # Jaeger tracing 시작
              generate_request_id: true
              # tracing:
              #   provider:
              #     name: envoy.tracers.zipkin
              #     typed_config:
              #       "@type": type.googleapis.com/envoy.config.trace.v3.ZipkinConfig
              #       collector_cluster: jaeger
              #       collector_endpoint: "/api/v2/spans"
              #       shared_span_context: false
              #       collector_endpoint_version: HTTP_PROTO
              stat_prefix: egress_http
              route_config:
                name: egress_route
                validate_clusters: false
                virtual_hosts:
                - name: backend
                  domains:
                    - "*"
                  routes:
                  - match: { prefix: "/klevr/" }
                    route: { cluster: klevr, prefix_rewrite: "/" }
                    decorator: { operation: klevrService }
                  - match: { prefix: "/config-server/" }
                    route: { cluster: config-server }
                    decorator: { operation: config-server }
                  - match: { prefix: "/login/" }
                    route: { cluster: user-service }
                    decorator: { operation: user-service }
                  - match: { prefix: "/users/" }
                    route: { cluster: user-service, prefix_rewrite: "/" }
                    decorator: { operation: user-service }
                  - match: { prefix: "/notis/" }
                    route: { cluster: noti-service, prefix_rewrite: "/" }
                    decorator: { operation: noti-service }
                  - match: { prefix: "/lari/" }
                    route: { cluster: lari-service, prefix_rewrite: "/" }
                    decorator: { operation: lari-service }
                  - match: { prefix: "/history/" }
                    route: { cluster: history-service, prefix_rewrite: "/" }
                    decorator: { operation: history-service }
              http_filters:
              - name: envoy.filters.http.router
                typed_config: {}   